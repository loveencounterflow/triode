{
  "version": 3,
  "file": "main.test.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/main.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'TRIODE/TESTS/basic'\ndebug                     = CND.get_logger 'debug',     badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\nhelp                      = CND.get_logger 'help',      badge\nwarn                      = CND.get_logger 'warn',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\njr                        = JSON.stringify\ntest                      = require 'guy-test'\nTRIODE                    = require '../..'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"basic\" ] = ( T, done ) ->\n  triode = TRIODE.new()\n  triode.set 'aluminum',  { word: 'aluminum', text: 'a metal', }\n  triode.set 'aluminium', { word: 'aluminium', text: 'a metal', }\n  triode.set 'alumni',    { word: 'alumni', text: 'a former student', }\n  triode.set 'alphabet',  { word: 'alphabet', text: 'a kind of writing system', }\n  triode.set 'abacus',    { word: 'abacus', text: 'a manual calculator', }\n  #.........................................................................................................\n  probes_and_matchers = [\n    [\"a\",[[\"abacus\",{\"word\":\"abacus\",\"text\":\"a manual calculator\"}],[\"alphabet\",{\"word\":\"alphabet\",\"text\":\"a kind of writing system\"}],[\"alumni\",{\"word\":\"alumni\",\"text\":\"a former student\"}],[\"aluminium\",{\"word\":\"aluminium\",\"text\":\"a metal\"}],[\"aluminum\",{\"word\":\"aluminum\",\"text\":\"a metal\"}]],null]\n    [\"alu\",[[\"alumni\",{\"word\":\"alumni\",\"text\":\"a former student\"}],[\"aluminium\",{\"word\":\"aluminium\",\"text\":\"a metal\"}],[\"aluminum\",{\"word\":\"aluminum\",\"text\":\"a metal\"}]],null]\n    [\"alp\",[[\"alphabet\",{\"word\":\"alphabet\",\"text\":\"a kind of writing system\"}]],null]\n    [\"b\",[],null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      result = triode.find probe\n      # urge jr [ probe, result, null, ]\n      resolve result\n      return null\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"sorting 1\" ] = ( T, done ) ->\n  triode = TRIODE.new { sort: 'text', }\n  triode.set 'aluminum',  { word: 'aluminum', text: '05 a metal', }\n  triode.set 'aluminium', { word: 'aluminium', text: '04 a metal', }\n  triode.set 'alumni',    { word: 'alumni', text: '02 a former student', }\n  triode.set 'alphabet',  { word: 'alphabet', text: '03 a kind of writing system', }\n  triode.set 'abacus',    { word: 'abacus', text: '01 a manual calculator', }\n  #.........................................................................................................\n  probes_and_matchers = [\n    [\"a\",[[\"abacus\",{\"word\":\"abacus\",\"text\":\"01 a manual calculator\"}],[\"alumni\",{\"word\":\"alumni\",\"text\":\"02 a former student\"}],[\"alphabet\",{\"word\":\"alphabet\",\"text\":\"03 a kind of writing system\"}],[\"aluminium\",{\"word\":\"aluminium\",\"text\":\"04 a metal\"}],[\"aluminum\",{\"word\":\"aluminum\",\"text\":\"05 a metal\"}]],null]\n    [\"alu\",[[\"alumni\",{\"word\":\"alumni\",\"text\":\"02 a former student\"}],[\"aluminium\",{\"word\":\"aluminium\",\"text\":\"04 a metal\"}],[\"aluminum\",{\"word\":\"aluminum\",\"text\":\"05 a metal\"}]],null]\n    [\"alp\",[[\"alphabet\",{\"word\":\"alphabet\",\"text\":\"03 a kind of writing system\"}]],null]\n    [\"b\",[],null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      result = triode.find probe\n      resolve result\n      return null\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"sorting 2\" ] = ( T, done ) ->\n  triode = TRIODE.new { sort: true, }\n  triode.set 'aluminum',  { word: 'aluminum', text: '05 a metal', }\n  triode.set 'aluminium', { word: 'aluminium', text: '04 a metal', }\n  triode.set 'alumni',    { word: 'alumni', text: '02 a former student', }\n  triode.set 'alphabet',  { word: 'alphabet', text: '03 a kind of writing system', }\n  triode.set 'abacus',    { word: 'abacus', text: '01 a manual calculator', }\n  #.........................................................................................................\n  probes_and_matchers = [\n    [\"a\",[[\"abacus\",{\"word\":\"abacus\",\"text\":\"01 a manual calculator\"}],[\"alphabet\",{\"word\":\"alphabet\",\"text\":\"03 a kind of writing system\"}],[\"aluminium\",{\"word\":\"aluminium\",\"text\":\"04 a metal\"}],[\"aluminum\",{\"word\":\"aluminum\",\"text\":\"05 a metal\"}],[\"alumni\",{\"word\":\"alumni\",\"text\":\"02 a former student\"}]],null] #! expected result: [[\"abacus\",{\"word\":\"abacus\",\"text\":\"01 a manual calculator\"}],[\"alumni\",{\"word\":\"alumni\",\"text\":\"02 a former student\"}],[\"alphabet\",{\"word\":\"alphabet\",\"text\":\"03 a kind of writing system\"}],[\"aluminium\",{\"word\":\"aluminium\",\"text\":\"04 a metal\"}],[\"aluminum\",{\"word\":\"aluminum\",\"text\":\"05 a metal\"}]]\n    [\"alu\",[[\"aluminium\",{\"word\":\"aluminium\",\"text\":\"04 a metal\"}],[\"aluminum\",{\"word\":\"aluminum\",\"text\":\"05 a metal\"}],[\"alumni\",{\"word\":\"alumni\",\"text\":\"02 a former student\"}]],null] #! expected result: [[\"alumni\",{\"word\":\"alumni\",\"text\":\"02 a former student\"}],[\"aluminium\",{\"word\":\"aluminium\",\"text\":\"04 a metal\"}],[\"aluminum\",{\"word\":\"aluminum\",\"text\":\"05 a metal\"}]]\n    [\"alp\",[[\"alphabet\",{\"word\":\"alphabet\",\"text\":\"03 a kind of writing system\"}]],null]\n    [\"b\",[],null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      result = triode.find probe\n      resolve result\n      return null\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"prefixes by length\" ] = ( T, done ) ->\n  triode = TRIODE.new { sort: true, }\n  triode.set 'q',   'っ'\n  triode.set 'n',   'ん'\n  triode.set 'v',   'ゔ'\n  triode.set 'va',  'ゔぁ'\n  triode.set 'vi',  'ゔぃ'\n  triode.set 'vu',  'ゔぅ'\n  triode.set 've',  'ゔぇ'\n  triode.set 'vo',  'ゔぉ'\n  triode.set 'na',  'な'\n  triode.set 'ne',  'ね'\n  triode.set 'ni',  'に'\n  triode.set 'no',  'の'\n  triode.set 'nu',  'ぬ'\n  triode.set 'ya',  'や'\n  triode.set 'yo',  'よ'\n  triode.set 'yu',  'ゆ'\n  triode.set 'nya', 'にゃ'\n  triode.set 'nyo', 'にょ'\n  triode.set 'nyu', 'にゅ'\n  #.........................................................................................................\n  probes_and_matchers = [\n    [[\"get_keys_sorted_by_length_asc\",[]],[\"n\",\"q\",\"v\",\"na\",\"ne\",\"ni\",\"no\",\"nu\",\"va\",\"ve\",\"vi\",\"vo\",\"vu\",\"ya\",\"yo\",\"yu\",\"nya\",\"nyo\",\"nyu\"],null]\n    [[\"get_longer_keys\",[\"n\"]],[\"na\",\"ne\",\"ni\",\"no\",\"nu\",\"va\",\"ve\",\"vi\",\"vo\",\"vu\",\"ya\",\"yo\",\"yu\",\"nya\",\"nyo\",\"nyu\"],null]\n    [[\"get_longer_keys\",[\"na\"]],[\"nya\",\"nyo\",\"nyu\"],null]\n    [[\"superkeys_from_key\",[\"n\"]],[\"na\",\"ne\",\"ni\",\"no\",\"nu\",\"nya\",\"nyo\",\"nyu\"],null]\n    [[\"superkeys_from_key\",[\"v\"]],[\"va\",\"ve\",\"vi\",\"vo\",\"vu\"],null]\n    [[\"get_all_superkeys\",[]],{\"v\":[\"va\",\"ve\",\"vi\",\"vo\",\"vu\"],\"n\":[\"na\",\"ne\",\"ni\",\"no\",\"nu\",\"nya\",\"nyo\",\"nyu\"]},null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      [ method_name, P, ] = probe\n      result = triode[ method_name ] P...\n      resolve result\n  #.........................................................................................................\n  done()\n  return null\n\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"_ demo\" ] = ( T, done ) ->\n  triode = TRIODE.new { sort: true, }\n  triode.set 'q',   'っ'\n  triode.set 'n',   'ん'\n  triode.set 'v',   'ゔ'\n  triode.set 'va',  'ゔぁ'\n  triode.set 'vi',  'ゔぃ'\n  triode.set 'vu',  'ゔぅ'\n  triode.set 've',  'ゔぇ'\n  triode.set 'vo',  'ゔぉ'\n  triode.set 'na',  'な'\n  triode.set 'ne',  'ね'\n  triode.set 'ni',  'に'\n  triode.set 'no',  'の'\n  triode.set 'nu',  'ぬ'\n  triode.set 'ya',  'や'\n  triode.set 'yo',  'よ'\n  triode.set 'yu',  'ゆ'\n  triode.set 'nya', 'にゃ'\n  triode.set 'nyo', 'にょ'\n  triode.set 'nyu', 'にゅ'\n  debug 'µ76777-1', triode\n  debug 'µ76777-2', triode.get_keys_sorted_by_length_asc()\n  debug 'µ76777-3', triode.get_longer_keys 'n'\n  # debug 'µ76777-4', triode.get_longer_keys 'na'\n  debug 'µ76777-5', triode.superkeys_from_key 'n'\n  debug 'µ76777-6', triode.superkeys_from_key 'v'\n  debug 'µ76777-7', triode.get_all_superkeys()\n  # debug 'µ76777-8', triode.disambiguate_subkey 'n', 'n.'\n  debug 'µ76777-9', triode\n  # debug 'µ76777-10', triode.superkeys_from_key 'n'\n  # debug 'µ76777-11', triode.superkeys_from_key 'n.'\n  debug 'µ76777-12', triode.has 'n'\n  debug 'µ76777-13', triode.has 'n.'\n  # debug 'µ76777-14', triode.disambiguate_subkey 'n.', 'v'\n  # debug 'µ76777-15', triode.disambiguate_subkey 'a', 'n.'\n  debug 'µ76777-16', triode.disambiguate_subkey 'v', 'v.'\n  debug 'µ76777-17', triode.get_all_superkeys()\n  # debug 'µ76777-18', triode.apply_replacements_recursively 'v'\n  debug 'µ76777-20', triode.apply_replacements_recursively 'n'\n  debug 'µ76777-17', triode.has_superkeys()\n  urge 'µ76777-21', '\\n' + triode.replacements_as_js_module_text 'foobar/kana.wsv'\n  replacer = triode.replacements_as_js_function 'foobar/kana.wsv'\n  debug 'µ76777-17', replacer 'ka'\n  debug 'µ76777-17', replacer 'ki'\n  debug 'µ76777-17', replacer 'んa'\n  debug 'µ76777-17', replacer 'んe'\n  debug 'µ76777-17', replacer 'n'\n  debug 'µ76777-17', replacer 'v.'\n  debug 'µ76777-17', replacer 'va'\n  debug 'µ76777-6', triode.superkeys_from_key 'v.'\n  # debug 'µ76777-22', triode\n  done()\n  return null\n\n\n############################################################################################################\nunless module.parent?\n  # test @\n  # test @[ \"selector keypatterns\" ]\n  # test @[ \"select 2\" ]\n  test @[ \"_ demo\" ]\n\n\n\n"
  ]
}