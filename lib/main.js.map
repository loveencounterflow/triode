{
  "version": 3,
  "file": "main.js",
  "sourceRoot": "..",
  "sources": [
    "src/main.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;EAAA;AAAA,MAAA,GAAA,EAAA,OAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA;;EAEA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAV5B;;;EAYA,OAAA,GAA4B,OAAA,CAAQ,oBAAR,EAZ5B;;;EAgBA,IAAC,CAAA,GAAD,GAAO,QAAA,CAAE,QAAF,CAAA;AACL,QAAA,cAAA,EAAA,OAAA,EAAA,GAAA,EAAA,GAAA,EAAA,WAAA,EAAA;IAAA,IAAA,GAAQ,IAAI,OAAJ,CAAA;IACR,OAAA,GAAW;IACX,IAAG,6DAAH;MACE,IAAG,OAAA,KAAW,KAAd;QACE,KADF;OAAA,MAEK,IAAG,OAAA,KAAW,IAAd;QACH,WAAA,GAAc,QAAA,CAAE,CAAF,EAAK,CAAL,CAAA;UACZ,IAAa,CAAG,CAAA,CAAA,CAAH,GAAS,CAAG,CAAA,CAAA,CAAzB;AAAA,mBAAO,CAAC,EAAR;;UACA,IAAa,CAAG,CAAA,CAAA,CAAH,GAAS,CAAG,CAAA,CAAA,CAAzB;AAAA,mBAAO,CAAC,EAAR;;AACA,iBAAO;QAHK,EADX;OAAA,MAKA,IAAK,GAAG,CAAC,QAAJ,CAAa,OAAb,CAAL;QACH,WAAA,GAAc,QAAA,CAAE,CAAF,EAAK,CAAL,CAAA;UACZ,IAAa,CAAG,CAAA,CAAA,CAAK,CAAA,OAAA,CAAR,GAAoB,CAAG,CAAA,CAAA,CAAK,CAAA,OAAA,CAAzC;AAAA,mBAAO,CAAC,EAAR;;UACA,IAAa,CAAG,CAAA,CAAA,CAAK,CAAA,OAAA,CAAR,GAAoB,CAAG,CAAA,CAAA,CAAK,CAAA,OAAA,CAAzC;AAAA,mBAAO,CAAC,EAAR;;AACA,iBAAO;QAHK,EADX;OAAA,MAAA;QAMH,MAAM,IAAI,KAAJ,CAAU,CAAA,2CAAA,CAAA,CAA8C,GAAG,CAAC,OAAJ,CAAY,OAAZ,CAA9C,CAAA,CAAV,EANH;OARP;KAFA;;IAkBA,GAAA,GAAM,CAAE,CAAF,EAAK,MAAL,CAAA,GAAA;AACJ,UAAA;MAAA,CAAA,GAAI,IAAI,CAAC,IAAL,CAAU,MAAV;MACJ,IAAsB,mBAAtB;QAAA,CAAC,CAAC,IAAF,CAAO,WAAP,EAAA;;AACA,aAAO;IAHH,EAlBN;;IAuBA,GAAA,GAAkB,QAAA,CAAE,CAAF,EAAK,GAAL,EAAU,KAAV,CAAA;aAAqB,IAAI,CAAC,GAAL,CAAS,GAAT,EAAc,KAAd;IAArB;IAClB,cAAA,GAAkB,QAAA,CAAE,CAAF,EAAK,GAAL,CAAA;aAAqB,IAAI,CAAC,MAAL,CAAY,GAAZ;IAArB,EAxBlB;;AA0BA,WAAO,IAAI,KAAJ,CAAU,IAAV,EAAgB,CAAE,GAAF,EAAO,GAAP,EAAY,cAAZ,CAAhB;EA3BF;AAhBP",
  "sourcesContent": [
    "\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'TRIODE'\ndebug                     = CND.get_logger 'debug',     badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\nhelp                      = CND.get_logger 'help',      badge\nwarn                      = CND.get_logger 'warn',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nTrieMap                   = require 'mnemonist/trie-map'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@new = ( settings ) ->\n  trie  = new TrieMap()\n  do_sort  = null\n  if ( do_sort = settings?.sort )?\n    if do_sort is false\n      null\n    else if do_sort is true\n      sort_method = ( a, b ) ->\n        return -1 if a[ 0 ] < b[ 0 ]\n        return +1 if a[ 0 ] > b[ 0 ]\n        return 0\n    else if ( CND.isa_text do_sort )\n      sort_method = ( a, b ) ->\n        return -1 if a[ 1 ][ do_sort ] < b[ 1 ][ do_sort ]\n        return +1 if a[ 1 ][ do_sort ] > b[ 1 ][ do_sort ]\n        return 0\n    else\n      throw new Error \"Âµ39833 expected a text or a boolean, got a #{CND.type_of do_sort}\"\n  #.........................................................................................................\n  get = ( _, prefix ) =>\n    R = trie.find prefix\n    R.sort sort_method if sort_method?\n    return R\n  #.........................................................................................................\n  set             = ( _, key, value ) -> trie.set key, value\n  deleteProperty  = ( _, key        ) -> trie.delete key\n  #.........................................................................................................\n  return new Proxy trie, { get, set, deleteProperty, }\n\n\n"
  ]
}