{
  "version": 3,
  "file": "main.js",
  "sourceRoot": "..",
  "sources": [
    "src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'TRIODE'\ndebug                     = CND.get_logger 'debug',     badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\nhelp                      = CND.get_logger 'help',      badge\nwarn                      = CND.get_logger 'warn',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\n{ jr, }                   = CND\nTrieMap                   = require 'mnemonist/trie-map'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@new = ( settings ) ->\n  f = ->\n    #.......................................................................................................\n    by_length_asc = ( a, b ) ->\n      return -1 if a.length < b.length\n      return +1 if a.length > b.length\n      return -1 if a        < b\n      return +1 if a        > b\n      return  0\n    #.......................................................................................................\n    by_length_desc = ( a, b ) ->\n      return -1 if a.length > b.length\n      return +1 if a.length < b.length\n      return -1 if a        < b\n      return +1 if a        > b\n      return  0\n    #.......................................................................................................\n    do_sort   = null\n    if ( do_sort = settings?.sort )?\n      if do_sort is false\n        null\n      else if do_sort is true\n        sort_method = ( a, b ) ->\n          return -1 if a[ 0 ] < b[ 0 ]\n          return +1 if a[ 0 ] > b[ 0 ]\n          return 0\n      else if ( CND.isa_text do_sort )\n        sort_method = ( a, b ) ->\n          return -1 if a[ 1 ][ do_sort ] < b[ 1 ][ do_sort ]\n          return +1 if a[ 1 ][ do_sort ] > b[ 1 ][ do_sort ]\n          return 0\n      else\n        throw new Error \"µ57633 expected a text or a boolean, got a #{CND.type_of do_sort}\"\n    #.......................................................................................................\n    @find = ( prefix ) ->\n      R = trie.find prefix\n      R.sort sort_method if sort_method?\n      return R\n    #.......................................................................................................\n    @get_keys_sorted_by_length_asc  = -> [ @keys()..., ].sort by_length_asc\n    @get_keys_sorted_by_length_desc = -> [ @keys()..., ].sort by_length_desc\n    #.......................................................................................................\n    @get_longer_keys = ( key ) ->\n      unless ( type = CND.type_of key  ) is 'text'\n        throw new Error \"µ57954 expected a text, got a #{type}\"\n      if not @has key\n        throw new Error \"µ58275 unknown key #{rpr key}\"\n      R = @get_keys_sorted_by_length_asc()\n      for idx in [ 0 ... R.length ]\n        break if R[ idx ].length > key.length\n      return R[ idx .. ]\n    #.......................................................................................................\n    @superkeys_from_key = ( key ) ->\n      unless ( type = CND.type_of key  ) is 'text'\n        throw new Error \"µ58596 expected a text, got a #{type}\"\n      if not @has key\n        throw new Error \"µ58917 unknown key #{rpr key}\"\n      return ( sp for sp in @get_longer_keys key when sp.startsWith key )\n    #.......................................................................................................\n    @get_all_superkeys = ->\n      R = {}\n      for key from @keys()\n        R[ key ] = superprefixes if ( superprefixes = @superkeys_from_key key ).length > 0\n      return R\n    #.......................................................................................................\n    ### TAINT use more efficient method ###\n    @has_superkeys = -> ( Object.keys @get_all_superkeys() ).length > 0\n    #.......................................................................................................\n    @disambiguate_subkey = ( old_key, new_key ) ->\n      unless ( type = CND.type_of old_key  ) is 'text'\n        throw new Error \"µ59238 expected a text, got a #{type}\"\n      #.....................................................................................................\n      unless ( type = CND.type_of new_key ) is 'text'\n        throw new Error \"µ59559 expected a text, got a #{type}\"\n      #.....................................................................................................\n      if ( @superkeys_from_key old_key ).length is 0\n        throw new Error \"µ59880 old key #{rpr old_key} is not ambiguous\"\n      #.....................................................................................................\n      if @has new_key\n        throw new Error \"µ60201 new key #{rpr new_key} already in use\"\n      @replace old_key, new_key\n      #.....................................................................................................\n      if ( @superkeys_from_key new_key ).length isnt 0\n        throw new Error \"µ60522 new key #{rpr new_key} is still ambiguous\"\n      return null\n    #.......................................................................................................\n    @apply_replacements_recursively = ( key ) ->\n      unless ( type = CND.type_of key  ) is 'text'\n        throw new Error \"µ60843 expected a text, got a #{type}\"\n      #.....................................................................................................\n      if ( superkeys = @superkeys_from_key key ).length is 0\n        throw new Error \"µ61164 key #{rpr key} is not ambiguous\"\n      #.....................................................................................................\n      replacement = @get key\n      #.....................................................................................................\n      for old_superkey in superkeys\n        new_superkey = replacement + old_superkey[ key.length ... ]\n        @replace old_superkey, new_superkey\n      return null\n    #.......................................................................................................\n    @replace = ( old_key, new_key ) ->\n      #.....................................................................................................\n      if not @has old_key\n        throw new Error \"µ61485 unknown old key #{rpr old_key}\"\n      #.....................................................................................................\n      if @has new_key\n        throw new Error \"µ61806 new key #{rpr new_key} already in use\"\n      #.....................................................................................................\n      value = @get old_key\n      @delete old_key\n      @set new_key, value\n      return null\n    #.......................................................................................................\n    @replacements_as_js_function_text = ->\n      if ( subkeys = Object.keys @get_all_superkeys() ).length > 0\n        throw new Error \"µ61806 must first resolve subkeys #{rpr subkeys}\"\n      #.....................................................................................................\n      R = []\n      R.push \"( text ) => {\"\n      R.push \"  R = text\"\n      for key in @get_keys_sorted_by_length_desc()\n        replacement = @get key\n        R.push \"  R = R.replace( /^#{CND.escape_regex key}$/, #{rpr replacement} );\"\n      R.push \"  return R; };\\n\"\n      return R.join '\\n'\n    #.......................................................................................................\n    @replacements_as_js_function = -> eval @replacements_as_js_function_text()\n    #.......................................................................................................\n    @replacements_as_js_module_text = ( name ) ->\n      source      = @replacements_as_js_function_text()\n      { first_line\n        source }  = ( source.match /^(?<first_line>[^\\n]+)\\n(?<source>.*)$/ms ).groups\n      R = []\n      R.push \"// Generated code, do not edit;\"\n      R.push \"// edit #{rpr name} instead and re-generate.\"\n      R.push \"\"\n      R.push \"module.exports = #{first_line}\"\n      R.push source\n      return R.join '\\n'\n    #.......................................................................................................\n    @toString = -> @as_js_function_text()\n    #.......................................................................................................\n    @as_js_function_text = ->\n      #.....................................................................................................\n      R = []\n      R.push \"() => {\"\n      R.push \"  R = require( 'triode' ).new();\"\n      for [ key, value, ] from @entries()\n        R.push \"  R.set( #{jr key}, #{jr value} );\"\n      R.push \"  return R; };\\n\"\n      return R.join '\\n'\n    #.......................................................................................................\n    @as_js_function = -> ( eval @as_js_function_text() )()\n    #.......................................................................................................\n    @as_js_module_text = ( name ) ->\n      source      = @as_js_function_text()\n      { first_line\n        source }  = ( source.match /^(?<first_line>[^\\n]+)\\n(?<source>.*)$/ms ).groups\n      R = []\n      R.push \"// Generated code, do not edit;\"\n      R.push \"// edit #{rpr name} instead and re-generate.\"\n      R.push \"\"\n      R.push \"const f = #{first_line}\"\n      R.push source\n      R.push \"module.exports = f();\\n\"\n      return R.join '\\n'\n    #.......................................................................................................\n    return @\n  #.........................................................................................................\n  trie = new TrieMap()\n  return f.apply Object.create trie\n\n\n"
  ]
}